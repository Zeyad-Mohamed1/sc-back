generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String @id @default(uuid())
  firstName     String
  lastName      String
  studentNumber String @unique @db.VarChar(11)
  parentNumber  String
  governorate   String
  yearOfStudy   String
  password      String

  isAdmin   Boolean          @default(false)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  courses   CoursesOfUsers[]

  @@index([studentNumber, firstName])
}

model Year {
  id            String          @id @default(uuid())
  name          String
  image         String
  isActive      Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  CoursesOfYear CoursesOfYear[]

  @@unique([name])
}

model Course {
  id             String           @id @default(uuid())
  name           String
  description    String
  price          Float
  image          String
  isActive       Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  coursesofusers CoursesOfUsers[]
  lessons        Lesson[]
  CoursesOfYear  CoursesOfYear[]

  @@index([name])
}

model Lesson {
  id          String   @id @default(uuid())
  name        String
  description String
  video       Video[]
  image       String
  pdf         Pdf[]
  isFree      Boolean  @default(false)
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Video {
  id          String   @id @default(uuid())
  name        String
  url         String
  description String
  lesson      Lesson   @relation(fields: [lessonId], references: [id])
  lessonId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pdf {
  id        String   @id @default(uuid())
  name      String
  url       String
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoursesOfUsers {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoursesOfYear {
  id       String @id @default(uuid())
  year     Year   @relation(fields: [yearId], references: [id])
  yearId   String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
